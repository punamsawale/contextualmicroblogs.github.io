'use strict'

const Logger = require('../../../logger')
const semver = require('semver')
const Util = require('../../../util')

/**
 * log4js Instrumentation
 * https://www.npmjs.com/package/log4js
 * @param log4js
 * @param tracer
 * @param shimmer
 * @param version
 */
module.exports = function (getFramework, instrumenter, version, moduleName, pkgName) {
  let shimmer = instrumenter.getShimmer()
  let tracer = instrumenter.getTracer()

  if (!semver.satisfies(version, '>= 2.0')) {
    return getFramework
  }

  return shimmer.wrap(getFramework, null, function wrapGetFramework (original) {
    return function wrappedGetFramework () {
      let result = original.apply(this, arguments)
      if (Util.isFunction(result)) {
        return shimmer.wrap(result, null, wrapCommonCallback)
      }
      return result
    }
  })

  function wrapCommonCallback (original) {
    return function wrappedCommonCallback () {
      let args = Util.argsToArray.apply(this, arguments)
      let requestIndex = 0
      let requestObject = args[requestIndex]
      let activeTransaction = tracer.getActiveTransaction()

      if (activeTransaction && Util.isObject(requestObject)) {
        createTransactionInfo(activeTransaction, requestObject)
      }
      let response = original.apply(this, args)
      if (activeTransaction && Util.isObject(requestObject)) {
        createTransactionInfo(activeTransaction, response)
      }
      return response
    }
  }

  /**
   * Stores transaction info in request and
   * response objects
   * @param {*} transaction
   * @param {*} request
   * @param {*} response
   */
  function createTransactionInfo (transaction, requestResponse) {
    if (!requestResponse) {
      Logger.debug('Serverless-Http: Missing request or response object! Not storing transaction info.')
      return
    }

    var txInfo = {
      transaction: transaction,
      spanStack: [], // Need to observe
      errorHandled: false,
      error: null
    }

    requestResponse['txInfo'] = txInfo // Make this into constant

    Logger.debug(
      'Serverless-Http: Stored transaction %s information on request or response',
      transaction.id()
    )
  }
}
